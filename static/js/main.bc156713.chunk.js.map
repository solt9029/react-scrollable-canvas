{"version":3,"sources":["Jumbotron.tsx","Navbar.tsx","react-scrollable-canvas/index.js","ResizableCanvas.tsx","IndexPage.tsx","ScrollableCanvasExample.jsx","ScrollableCanvasContainerExample.jsx","ScrollableCanvasWithMeasureExample.jsx","ExampleContent.tsx","ScrollableClickableCanvasExample.jsx","ExamplesPage.tsx","constants.ts","DocsPage.tsx","App.tsx","serviceWorker.js","index.tsx"],"names":["StyledContainer","styled","Container","StyledRCJumbotron","RCJumbotron","Jumbotron","className","Navbar","props","useState","isOpen","setIsOpen","color","dark","expand","NavbarBrand","tag","Link","to","NavbarToggler","onClick","Collapse","navbar","Nav","NavItem","NavLink","active","href","target","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__makeTemplateObject","cooked","raw","defineProperty","value","templateObject_1","Canvas","canvas","attrs","style","top","left","width","height","transform","translateX","translateY","defaultProps","templateObject_1$1","templateObject_2","templateObject_3","templateObject_4","templateObject_5","Div","div","_a","ScrollContainer","noScrollBar","css","LargeContainer","Stage","ScrollableCanvasContainer","_super","_this","apply","this","arguments","ref","createRef","onScroll","throttle","current","undefined","scrollTop","scrollLeft","wait","__","constructor","prototype","create","__extends","componentDidMount","addEventListener","componentWillUnmount","removeEventListener","render","largeWidth","largeHeight","children","React","createElement","Component","ScrollableCanvas","setScrollTop","_b","setScrollLeft","canvasRef","ResizableCanvas","ctx","state","size","onResize","setState","window","innerWidth","draw","clearRect","beginPath","gradient","createLinearGradient","addColorStop","fillStyle","rect","fill","getContext","IndexPage","WIDTH","HEIGHT","CIRCLE_RADIUS","CIRCLE_SIZE","ScrollableCanvasExample","y","x","arc","LARGE_WIDTH","LARGE_HEIGHT","ScrollableCanvasContainerExample","frontCanvasRef","backCanvasRef","frontCtx","backCtx","ScrollableCanvasWithMeasureExample","scroll","bounds","contentRect","measureRef","StyledSyntaxHighlighter","SyntaxHighlighter","ExamplesContent","title","description","code","language","ScrollableClickableCanvasExample","points","i","length","event","nativeEvent","offsetX","offsetY","push","ExamplesPage","ExampleContent","DocsPage","source","App","exact","path","component","Boolean","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.bc156713.chunk.js","sourcesContent":["import React from 'react';\nimport { Jumbotron as RCJumbotron, Container } from 'reactstrap';\nimport styled from 'styled-components';\n\nconst StyledContainer = styled(Container)`\n  text-align: center;\n`;\n\nconst StyledRCJumbotron = styled(RCJumbotron)`\n  margin-bottom: 0;\n`;\n\nconst Jumbotron = () => {\n  return (\n    <StyledRCJumbotron>\n      <StyledContainer>\n        <h1 className=\"display-3\">React Scrollable Canvas</h1>\n        <p className=\"lead\">React component library that allows you to create scrollable canvas easily and quickly.</p>\n      </StyledContainer>\n    </StyledRCJumbotron>\n  );\n};\n\nexport default Jumbotron;\n","import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Collapse, Navbar as RSNavbar, NavbarToggler, NavbarBrand, Nav, NavItem, NavLink } from 'reactstrap';\n\ninterface NavbarProps {\n  active?: string;\n}\n\nconst Navbar = (props: NavbarProps) => {\n  const [isOpen, setIsOpen] = useState(false);\n  const toggle = () => setIsOpen(!isOpen);\n\n  return (\n    <RSNavbar color=\"dark\" dark expand=\"md\">\n      <NavbarBrand tag={Link} to=\"/\">\n        react-scrollable-canvas\n      </NavbarBrand>\n      <NavbarToggler onClick={toggle} />\n      <Collapse isOpen={isOpen} navbar>\n        <Nav className=\"mr-auto\" navbar>\n          <NavItem>\n            <NavLink tag={Link} to=\"/examples\" active={props.active === 'examples'}>\n              Examples\n            </NavLink>\n          </NavItem>\n          <NavItem>\n            <NavLink tag={Link} to=\"/docs\" active={props.active === 'docs'}>\n              Docs\n            </NavLink>\n          </NavItem>\n          <NavItem>\n            <NavLink href=\"https://github.com/solt9029/react-scrollable-canvas\" target=\"_blank\">\n              GitHub\n            </NavLink>\n          </NavItem>\n        </Nav>\n      </Collapse>\n    </RSNavbar>\n  );\n};\n\nexport default Navbar;\n","/* eslint-disable */\nimport styled, { css } from 'styled-components';\nimport React, { createRef, Component, useState } from 'react';\nimport { throttle } from 'lodash';\n\n/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nfunction __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nfunction __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n}\n\nvar Canvas = styled.canvas.attrs(function (props) { return ({\r\n    style: {\r\n        top: props.top + \"px\",\r\n        left: props.left + \"px\",\r\n        width: props.width + \"px\",\r\n        height: props.height + \"px\",\r\n        transform: \"translate(\" + props.translateX + \"px, \" + props.translateY + \"px)\",\r\n    },\r\n}); })(templateObject_1 || (templateObject_1 = __makeTemplateObject([\"\\n  position: absolute;\\n  outline: none;\\n  overflow: hidden;\\n\"], [\"\\n  position: absolute;\\n  outline: none;\\n  overflow: hidden;\\n\"])));\r\nCanvas.defaultProps = {\r\n    top: 0,\r\n    left: 0,\r\n    width: 500,\r\n    height: 500,\r\n    translateX: 0,\r\n    translateY: 0,\r\n};\r\nvar templateObject_1;\n\nvar Div = styled.div(templateObject_1$1 || (templateObject_1$1 = __makeTemplateObject([\"\\n  width: \", \"px;\\n  height: \", \"px;\\n\"], [\"\\n  width: \", \"px;\\n  height: \", \"px;\\n\"])), function (_a) {\r\n    var width = _a.width;\r\n    return width;\r\n}, function (_a) {\r\n    var height = _a.height;\r\n    return height;\r\n});\r\nvar ScrollContainer = styled(Div)(templateObject_3 || (templateObject_3 = __makeTemplateObject([\"\\n  overflow: auto;\\n  overflow-y: scroll;\\n  \", \"\\n\"], [\"\\n  overflow: auto;\\n  overflow-y: scroll;\\n  \",\r\n    \"\\n\"])), function (_a) {\r\n    var noScrollBar = _a.noScrollBar;\r\n    return noScrollBar\r\n        ? css(templateObject_2 || (templateObject_2 = __makeTemplateObject([\"\\n          -ms-overflow-style: none; /* for IE, Edge */\\n          scrollbar-width: none; /* for Firefox */\\n          ::-webkit-scrollbar {\\n            display: none; /* for Chrome, Safari */\\n          }\\n        \"], [\"\\n          -ms-overflow-style: none; /* for IE, Edge */\\n          scrollbar-width: none; /* for Firefox */\\n          ::-webkit-scrollbar {\\n            display: none; /* for Chrome, Safari */\\n          }\\n        \"]))) : \"\";\r\n});\r\nvar LargeContainer = styled(Div)(templateObject_4 || (templateObject_4 = __makeTemplateObject([\"\\n  overflow: hidden;\\n\"], [\"\\n  overflow: hidden;\\n\"])));\r\nvar Stage = styled.div(templateObject_5 || (templateObject_5 = __makeTemplateObject([\"\\n  position: relative;\\n  outline: none;\\n\"], [\"\\n  position: relative;\\n  outline: none;\\n\"])));\r\nvar ScrollableCanvasContainer = /** @class */ (function (_super) {\r\n    __extends(ScrollableCanvasContainer, _super);\r\n    function ScrollableCanvasContainer() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        _this.ref = createRef();\r\n        _this.onScroll = throttle(function () {\r\n            if (_this.ref.current === null || _this.props.onScroll === undefined) {\r\n                return;\r\n            }\r\n            var _a = _this.ref.current, scrollTop = _a.scrollTop, scrollLeft = _a.scrollLeft;\r\n            _this.props.onScroll(scrollTop, scrollLeft);\r\n        }, _this.props.wait);\r\n        return _this;\r\n    }\r\n    ScrollableCanvasContainer.prototype.componentDidMount = function () {\r\n        if (this.ref.current === null) {\r\n            return;\r\n        }\r\n        this.ref.current.addEventListener('scroll', this.onScroll);\r\n    };\r\n    ScrollableCanvasContainer.prototype.componentWillUnmount = function () {\r\n        if (this.ref.current === null) {\r\n            return;\r\n        }\r\n        this.ref.current.removeEventListener('scroll', this.onScroll);\r\n    };\r\n    ScrollableCanvasContainer.prototype.render = function () {\r\n        var _a = this.props, width = _a.width, height = _a.height, largeWidth = _a.largeWidth, largeHeight = _a.largeHeight, noScrollBar = _a.noScrollBar, children = _a.children;\r\n        return (React.createElement(ScrollContainer, { noScrollBar: noScrollBar, width: width, height: height, ref: this.ref },\r\n            React.createElement(LargeContainer, { width: largeWidth, height: largeHeight },\r\n                React.createElement(Stage, null, children))));\r\n    };\r\n    ScrollableCanvasContainer.defaultProps = {\r\n        wait: 10,\r\n        noScrollBar: false,\r\n    };\r\n    return ScrollableCanvasContainer;\r\n}(Component));\r\nvar templateObject_1$1, templateObject_2, templateObject_3, templateObject_4, templateObject_5;\n\nvar ScrollableCanvas = function (props) {\r\n    var _a = useState(0), scrollTop = _a[0], setScrollTop = _a[1];\r\n    var _b = useState(0), scrollLeft = _b[0], setScrollLeft = _b[1];\r\n    var onScroll = function (scrollTop, scrollLeft) {\r\n        setScrollTop(scrollTop);\r\n        setScrollLeft(scrollLeft);\r\n        if (props.onScroll === undefined) {\r\n            return;\r\n        }\r\n        props.onScroll(scrollTop, scrollLeft);\r\n    };\r\n    return (React.createElement(ScrollableCanvasContainer, { noScrollBar: props.noScrollBar, onScroll: onScroll, wait: props.wait, width: props.width, height: props.height, largeWidth: props.largeWidth, largeHeight: props.largeHeight },\r\n        React.createElement(Canvas, { ref: props.canvasRef, width: props.width, height: props.height, translateX: scrollLeft, translateY: scrollTop })));\r\n};\r\nScrollableCanvas.defaultProps = {\r\n    wait: 10,\r\n    noScrollBar: false,\r\n};\n\nexport { Canvas, ScrollableCanvas, ScrollableCanvasContainer };\n","import React, { Component, createRef } from 'react';\nimport { throttle } from 'lodash';\nimport { ScrollableCanvas } from './react-scrollable-canvas';\n\nexport default class ResizableCanvas extends Component<{}, { size: number }> {\n  private canvasRef = createRef<HTMLCanvasElement>();\n  private ctx: CanvasRenderingContext2D | null = null;\n  private scrollTop = 0;\n  private scrollLeft = 0;\n  state = {\n    size: 300,\n  };\n\n  componentDidMount() {\n    window.addEventListener('resize', this.onResize);\n    this.setState({ size: window.innerWidth });\n\n    if (this.canvasRef.current === null) {\n      return;\n    }\n    this.ctx = this.canvasRef.current.getContext('2d');\n  }\n\n  componentDidUpdate() {\n    this.draw(this.scrollTop, this.scrollLeft);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('resize', this.onResize);\n  }\n\n  private onResize = throttle(() => {\n    this.setState({ size: window.innerWidth });\n  }, 10);\n\n  private draw = (scrollTop: number, scrollLeft: number) => {\n    if (this.ctx === null) {\n      return;\n    }\n    this.ctx.clearRect(0, 0, this.state.size * 2, this.state.size * 2);\n    this.ctx.beginPath();\n    const gradient = this.ctx.createLinearGradient(-scrollLeft, -scrollTop, this.state.size * 2, this.state.size * 2);\n    gradient.addColorStop(0.0, 'rgb(255, 0, 0)');\n    gradient.addColorStop(0.5, 'rgb(0, 255, 0)');\n    gradient.addColorStop(1.0, 'rgb(0, 0, 255)');\n    this.ctx.fillStyle = gradient;\n    this.ctx.rect(-scrollLeft, -scrollTop, this.state.size * 2, this.state.size * 2);\n    this.ctx.fill();\n  };\n\n  private onScroll = (scrollTop: number, scrollLeft: number) => {\n    this.draw(scrollTop, scrollLeft);\n    this.scrollTop = scrollTop;\n    this.scrollLeft = scrollLeft;\n  };\n\n  render() {\n    return (\n      <ScrollableCanvas\n        width={this.state.size}\n        height={this.state.size}\n        largeWidth={this.state.size * 2}\n        largeHeight={this.state.size * 2}\n        canvasRef={this.canvasRef}\n        onScroll={this.onScroll}\n      />\n    );\n  }\n}\n","import React from 'react';\nimport Jumbotron from './Jumbotron';\nimport Navbar from './Navbar';\nimport ResizableCanvas from './ResizableCanvas';\n\nconst IndexPage = () => {\n  return (\n    <>\n      <Navbar />\n      <Jumbotron />\n      <ResizableCanvas />\n    </>\n  );\n};\n\nexport default IndexPage;\n","import React, { Component, createRef } from 'react';\nimport { ScrollableCanvas } from './react-scrollable-canvas';\n\nconst WIDTH = 300;\nconst HEIGHT = 300;\nconst LARGE_WIDTH = 600;\nconst LARGE_HEIGHT = 600;\nconst CIRCLE_RADIUS = 5;\nconst CIRCLE_SIZE = 30;\n\nexport default class ScrollableCanvasExample extends Component {\n  canvasRef = createRef();\n  ctx = null;\n\n  draw = (scrollTop, scrollLeft) => {\n    // draw canvas here.\n    this.ctx.clearRect(0, 0, WIDTH, HEIGHT);\n    for (let y = -scrollTop % CIRCLE_SIZE; y < HEIGHT - (scrollTop % CIRCLE_SIZE); y += CIRCLE_SIZE) {\n      for (let x = -scrollLeft % CIRCLE_SIZE; x < WIDTH - (scrollLeft % CIRCLE_SIZE); x += CIRCLE_SIZE) {\n        this.ctx.beginPath();\n        this.ctx.arc(x + CIRCLE_SIZE / 2, y + CIRCLE_SIZE / 2, CIRCLE_RADIUS, 0, 360, false);\n        this.ctx.fillStyle = `rgba(${(scrollLeft + x) / 2}, ${(scrollTop + y) / 2}, 128, 0.8)`;\n        this.ctx.fill();\n      }\n    }\n  };\n\n  componentDidMount() {\n    this.ctx = this.canvasRef.current.getContext('2d');\n    this.draw(0, 0);\n  }\n\n  render() {\n    return (\n      <ScrollableCanvas\n        width={WIDTH}\n        height={HEIGHT}\n        largeWidth={LARGE_WIDTH}\n        largeHeight={LARGE_HEIGHT}\n        canvasRef={this.canvasRef}\n        onScroll={this.draw}\n      />\n    );\n  }\n}\n","import React, { Component, createRef } from 'react';\nimport { ScrollableCanvasContainer, Canvas } from './react-scrollable-canvas';\n\nconst WIDTH = 300;\nconst HEIGHT = 300;\nconst LARGE_WIDTH = 600;\nconst LARGE_HEIGHT = 600;\nconst CIRCLE_RADIUS = 5;\nconst CIRCLE_SIZE = 30;\n\nexport default class ScrollableCanvasContainerExample extends Component {\n  frontCanvasRef = createRef();\n  backCanvasRef = createRef();\n  frontCtx = null;\n  backCtx = null;\n\n  state = {\n    scrollTop: 0,\n    scrollLeft: 0,\n  };\n\n  draw = () => {\n    const { scrollTop, scrollLeft } = this.state;\n\n    // draw canvas here.\n    if (this.frontCtx !== null) {\n      this.frontCtx.clearRect(0, 0, WIDTH, HEIGHT);\n      for (let y = -scrollTop % CIRCLE_SIZE; y < HEIGHT - (scrollTop % CIRCLE_SIZE); y += CIRCLE_SIZE) {\n        for (let x = -scrollLeft % CIRCLE_SIZE; x < WIDTH - (scrollLeft % CIRCLE_SIZE); x += CIRCLE_SIZE) {\n          this.frontCtx.beginPath();\n          this.frontCtx.arc(x + CIRCLE_SIZE / 2, y + CIRCLE_SIZE / 2, CIRCLE_RADIUS, 0, 360, false);\n          this.frontCtx.fillStyle = `rgba(${(scrollLeft + x) / 2}, ${(scrollTop + y) / 2}, 128, 0.8)`;\n          this.frontCtx.fill();\n        }\n      }\n    }\n    if (this.backCtx !== null) {\n      this.backCtx.clearRect(0, 0, WIDTH, HEIGHT);\n      this.backCtx.beginPath();\n      const gradient = this.backCtx.createLinearGradient(-scrollLeft, -scrollTop, LARGE_WIDTH, LARGE_HEIGHT);\n      gradient.addColorStop(0.0, 'rgb(255, 0, 0)');\n      gradient.addColorStop(0.5, 'rgb(0, 255, 0)');\n      gradient.addColorStop(1.0, 'rgb(0, 0, 255)');\n      this.backCtx.fillStyle = gradient;\n      this.backCtx.rect(-scrollLeft, -scrollTop, LARGE_WIDTH, LARGE_HEIGHT);\n      this.backCtx.fill();\n    }\n  };\n\n  onScroll = (scrollTop, scrollLeft) => {\n    this.setState({ scrollTop, scrollLeft });\n  };\n\n  componentDidUpdate() {\n    this.draw();\n  }\n\n  componentDidMount() {\n    if (this.frontCanvasRef.current !== null) {\n      this.frontCtx = this.frontCanvasRef.current.getContext('2d');\n    }\n    if (this.backCanvasRef.current !== null) {\n      this.backCtx = this.backCanvasRef.current.getContext('2d');\n    }\n    this.draw();\n  }\n\n  render() {\n    const { scrollTop, scrollLeft } = this.state;\n\n    return (\n      <>\n        <ScrollableCanvasContainer\n          width={WIDTH}\n          height={HEIGHT}\n          largeWidth={LARGE_WIDTH}\n          largeHeight={LARGE_HEIGHT}\n          onScroll={this.onScroll}\n        >\n          <Canvas\n            ref={this.backCanvasRef}\n            width={WIDTH}\n            height={HEIGHT}\n            translateX={scrollLeft}\n            translateY={scrollTop}\n          />\n          <Canvas\n            ref={this.frontCanvasRef}\n            width={WIDTH}\n            height={HEIGHT}\n            translateX={scrollLeft}\n            translateY={scrollTop}\n          />\n        </ScrollableCanvasContainer>\n      </>\n    );\n  }\n}\n","import React, { Component, createRef } from 'react';\nimport { ScrollableCanvas } from './react-scrollable-canvas';\nimport Measure from 'react-measure';\nimport styled from 'styled-components';\n\nconst CIRCLE_RADIUS = 5;\nconst CIRCLE_SIZE = 30;\n\nconst Div = styled.div`\n  width: 100%;\n  height: 300px;\n`;\n\nexport default class ScrollableCanvasWithMeasureExample extends Component {\n  canvasRef = createRef();\n  ctx = null;\n\n  state = {\n    canvas: { width: 0, height: 0 },\n    scroll: { top: 0, left: 0 },\n  };\n\n  draw = () => {\n    const { width, height } = this.state.canvas;\n    const { top, left } = this.state.scroll;\n\n    // draw canvas here.\n    this.ctx.clearRect(0, 0, width, height);\n    for (let y = -top % CIRCLE_SIZE; y < height - (top % CIRCLE_SIZE); y += CIRCLE_SIZE) {\n      for (let x = -left % CIRCLE_SIZE; x < width - (left % CIRCLE_SIZE); x += CIRCLE_SIZE) {\n        this.ctx.beginPath();\n        this.ctx.arc(x + CIRCLE_SIZE / 2, y + CIRCLE_SIZE / 2, CIRCLE_RADIUS, 0, 360, false);\n        this.ctx.fillStyle = `rgba(${(left + x) / 2}, ${(top + y) / 2}, 128, 0.8)`;\n        this.ctx.fill();\n      }\n    }\n  };\n\n  onScroll = (scrollTop, scrollLeft) => {\n    this.setState({ scroll: { top: scrollTop, left: scrollLeft } });\n  };\n\n  componentDidMount() {\n    this.ctx = this.canvasRef.current.getContext('2d');\n  }\n\n  componentDidUpdate() {\n    this.draw();\n  }\n\n  render() {\n    const { width, height } = this.state.canvas;\n\n    return (\n      <Measure\n        bounds\n        onResize={contentRect => {\n          this.setState({ canvas: { ...contentRect.bounds } });\n        }}\n      >\n        {({ measureRef }) => (\n          <Div ref={measureRef}>\n            <ScrollableCanvas\n              width={width}\n              height={height}\n              largeWidth={width * 2}\n              largeHeight={height * 2}\n              canvasRef={this.canvasRef}\n              onScroll={this.onScroll}\n            />\n          </Div>\n        )}\n      </Measure>\n    );\n  }\n}\n","import React, { ReactNode } from 'react';\nimport { Container } from 'reactstrap';\nimport styled from 'styled-components';\nimport SyntaxHighlighter from 'react-syntax-highlighter';\n\nconst StyledContainer = styled(Container)`\n  margin-top: 30px;\n  margin-bottom: 150px;\n`;\n\nconst StyledSyntaxHighlighter = styled(SyntaxHighlighter)`\n  margin-top: 30px;\n  margin-bottom: 30px;\n`;\n\ninterface ExampleContentProps {\n  title: string;\n  description: string;\n  code: string;\n  children?: ReactNode;\n}\n\nconst ExamplesContent = ({ title, description, code, children }: ExampleContentProps) => (\n  <StyledContainer>\n    <h1>{title}</h1>\n    <ul>\n      <li>{description}</li>\n    </ul>\n    {children}\n    <StyledSyntaxHighlighter language=\"javascript\">{code}</StyledSyntaxHighlighter>\n  </StyledContainer>\n);\n\nexport default ExamplesContent;\n","import React, { Component, createRef } from 'react';\nimport { ScrollableCanvas } from './react-scrollable-canvas';\nimport styled from 'styled-components';\n\nconst WIDTH = 300;\nconst HEIGHT = 300;\nconst LARGE_WIDTH = 600;\nconst LARGE_HEIGHT = 600;\nconst CIRCLE_RADIUS = 10;\n\nconst Div = styled.div`\n  width: ${WIDTH}px;\n  height: ${HEIGHT}px;\n  border: inset 1px #000000;\n`;\n\nexport default class ScrollableClickableCanvasExample extends Component {\n  canvasRef = createRef();\n  ctx = null;\n  points = [{ x: WIDTH / 2, y: HEIGHT / 2 }];\n  state = {\n    scrollTop: 0,\n    scrollLeft: 0,\n  };\n\n  draw = () => {\n    const { scrollTop, scrollLeft } = this.state;\n\n    // draw canvas here.\n    this.ctx.clearRect(0, 0, WIDTH, HEIGHT);\n    for (let i = 0; i < this.points.length; i++) {\n      this.ctx.beginPath();\n      this.ctx.arc(-scrollLeft + this.points[i].x, -scrollTop + this.points[i].y, CIRCLE_RADIUS, 0, 360, false);\n      this.ctx.fillStyle = `rgba(0, 0, 0, 0.8)`;\n      this.ctx.fill();\n    }\n  };\n\n  onScroll = (scrollTop, scrollLeft) => {\n    this.setState({ scrollTop, scrollLeft });\n  };\n\n  onClick = event => {\n    const { offsetX, offsetY } = event.nativeEvent;\n    const { scrollTop, scrollLeft } = this.state;\n    this.points.push({ x: offsetX + scrollLeft, y: offsetY + scrollTop });\n    this.draw();\n  };\n\n  componentDidMount() {\n    this.ctx = this.canvasRef.current.getContext('2d');\n    this.draw();\n  }\n\n  componentDidUpdate() {\n    this.draw();\n  }\n\n  render() {\n    return (\n      <Div onClick={this.onClick}>\n        <ScrollableCanvas\n          width={WIDTH}\n          height={HEIGHT}\n          largeWidth={LARGE_WIDTH}\n          largeHeight={LARGE_HEIGHT}\n          canvasRef={this.canvasRef}\n          onScroll={this.onScroll}\n        />\n      </Div>\n    );\n  }\n}\n","import React from 'react';\nimport Navbar from './Navbar';\nimport { Container } from 'reactstrap';\nimport styled from 'styled-components';\nimport ScrollableCanvasExample from './ScrollableCanvasExample';\nimport ScrollableCanvasContainerExample from './ScrollableCanvasContainerExample';\nimport ScrollableCanvasWithMeasureExample from './ScrollableCanvasWithMeasureExample';\nimport {\n  scrollableCanvasExampleCode,\n  scrollableCanvasContainerExampleCode,\n  scrollableCanvasWithMeasureExampleCode,\n  scrollableClickableCanvasExampleCode,\n} from './constants';\nimport ExampleContent from './ExampleContent';\nimport ScrollableClickableCanvasExample from './ScrollableClickableCanvasExample';\n\nconst StyledContainer = styled(Container)`\n  margin-top: 30px;\n  margin-bottom: 30px;\n`;\n\nconst ExamplesPage = () => {\n  return (\n    <>\n      <Navbar active=\"examples\" />\n      <StyledContainer>\n        <ExampleContent\n          title=\"Example: ScrollableCanvas\"\n          description=\"ScrollableCanvas is very simple to use.\"\n          code={scrollableCanvasExampleCode}\n        >\n          <ScrollableCanvasExample />\n        </ExampleContent>\n\n        <ExampleContent\n          title=\"Example: ScrollableCanvasContainer\"\n          description=\"You can create some layers with ScrollableCanvasContainer and Canvas.\"\n          code={scrollableCanvasContainerExampleCode}\n        >\n          <ScrollableCanvasContainerExample />\n        </ExampleContent>\n\n        <ExampleContent\n          title=\"Example: ScrollableCanvas with ReactMeasure\"\n          description=\"You can create scrollable canvas that matches the width of 100%.\"\n          code={scrollableCanvasWithMeasureExampleCode}\n        >\n          <ScrollableCanvasWithMeasureExample />\n        </ExampleContent>\n\n        <ExampleContent\n          title=\"Example: ScrollableCanvas handling click events\"\n          description=\"You can handle click events by wrapping ScrollableCanvas with div element.\"\n          code={scrollableClickableCanvasExampleCode}\n        >\n          <ScrollableClickableCanvasExample />\n        </ExampleContent>\n      </StyledContainer>\n    </>\n  );\n};\n\nexport default ExamplesPage;\n","export const scrollableCanvasExampleCode = `import React, { Component, createRef } from 'react';\nimport { ScrollableCanvas } from './react-scrollable-canvas';\n\nconst WIDTH = 300;\nconst HEIGHT = 300;\nconst LARGE_WIDTH = 600;\nconst LARGE_HEIGHT = 600;\nconst CIRCLE_RADIUS = 5;\nconst CIRCLE_SIZE = 30;\n\nexport default class ScrollableCanvasExample extends Component {\n  canvasRef = createRef();\n  ctx = null;\n\n  draw = (scrollTop, scrollLeft) => {\n    // draw canvas here.\n    this.ctx.clearRect(0, 0, WIDTH, HEIGHT);\n    for (let y = -scrollTop % CIRCLE_SIZE; y < HEIGHT - (scrollTop % CIRCLE_SIZE); y += CIRCLE_SIZE) {\n      for (let x = -scrollLeft % CIRCLE_SIZE; x < WIDTH - (scrollLeft % CIRCLE_SIZE); x += CIRCLE_SIZE) {\n        this.ctx.beginPath();\n        this.ctx.arc(x + CIRCLE_SIZE / 2, y + CIRCLE_SIZE / 2, CIRCLE_RADIUS, 0, 360, false);\n        this.ctx.fillStyle = \\`rgba(\\${(scrollLeft + x) / 2}, \\${(scrollTop + y) / 2}, 128, 0.8)\\`;\n        this.ctx.fill();\n      }\n    }\n  };\n\n  componentDidMount() {\n    this.ctx = this.canvasRef.current.getContext('2d');\n    this.draw(0, 0);\n  }\n\n  render() {\n    return (\n      <ScrollableCanvas\n        width={WIDTH}\n        height={HEIGHT}\n        largeWidth={LARGE_WIDTH}\n        largeHeight={LARGE_HEIGHT}\n        canvasRef={this.canvasRef}\n        onScroll={this.draw}\n      />\n    );\n  }\n}\n\n`;\n\nexport const scrollableCanvasContainerExampleCode = `import React, { Component, createRef } from 'react';\nimport { ScrollableCanvasContainer, Canvas } from './react-scrollable-canvas';\n\nconst WIDTH = 300;\nconst HEIGHT = 300;\nconst LARGE_WIDTH = 600;\nconst LARGE_HEIGHT = 600;\nconst CIRCLE_RADIUS = 5;\nconst CIRCLE_SIZE = 30;\n\nexport default class ScrollableCanvasContainerExample extends Component {\n  frontCanvasRef = createRef();\n  backCanvasRef = createRef();\n  frontCtx = null;\n  backCtx = null;\n\n  state = {\n    scrollTop: 0,\n    scrollLeft: 0,\n  };\n\n  draw = () => {\n    const { scrollTop, scrollLeft } = this.state;\n\n    // draw canvas here.\n    if (this.frontCtx !== null) {\n      this.frontCtx.clearRect(0, 0, WIDTH, HEIGHT);\n      for (let y = -scrollTop % CIRCLE_SIZE; y < HEIGHT - (scrollTop % CIRCLE_SIZE); y += CIRCLE_SIZE) {\n        for (let x = -scrollLeft % CIRCLE_SIZE; x < WIDTH - (scrollLeft % CIRCLE_SIZE); x += CIRCLE_SIZE) {\n          this.frontCtx.beginPath();\n          this.frontCtx.arc(x + CIRCLE_SIZE / 2, y + CIRCLE_SIZE / 2, CIRCLE_RADIUS, 0, 360, false);\n          this.frontCtx.fillStyle = \\`rgba(\\${(scrollLeft + x) / 2}, \\${(scrollTop + y) / 2}, 128, 0.8)\\`;\n          this.frontCtx.fill();\n        }\n      }\n    }\n    if (this.backCtx !== null) {\n      this.backCtx.clearRect(0, 0, WIDTH, HEIGHT);\n      this.backCtx.beginPath();\n      const gradient = this.backCtx.createLinearGradient(-scrollLeft, -scrollTop, LARGE_WIDTH, LARGE_HEIGHT);\n      gradient.addColorStop(0.0, 'rgb(255, 0, 0)');\n      gradient.addColorStop(0.5, 'rgb(0, 255, 0)');\n      gradient.addColorStop(1.0, 'rgb(0, 0, 255)');\n      this.backCtx.fillStyle = gradient;\n      this.backCtx.rect(-scrollLeft, -scrollTop, LARGE_WIDTH, LARGE_HEIGHT);\n      this.backCtx.fill();\n    }\n  };\n\n  onScroll = (scrollTop, scrollLeft) => {\n    this.setState({ scrollTop, scrollLeft });\n  };\n\n  componentDidUpdate() {\n    this.draw();\n  }\n\n  componentDidMount() {\n    if (this.frontCanvasRef.current !== null) {\n      this.frontCtx = this.frontCanvasRef.current.getContext('2d');\n    }\n    if (this.backCanvasRef.current !== null) {\n      this.backCtx = this.backCanvasRef.current.getContext('2d');\n    }\n    this.draw();\n  }\n\n  render() {\n    const { scrollTop, scrollLeft } = this.state;\n\n    return (\n      <>\n        <ScrollableCanvasContainer\n          width={WIDTH}\n          height={HEIGHT}\n          largeWidth={LARGE_WIDTH}\n          largeHeight={LARGE_HEIGHT}\n          onScroll={this.onScroll}\n        >\n          <Canvas\n            ref={this.backCanvasRef}\n            width={WIDTH}\n            height={HEIGHT}\n            translateX={scrollLeft}\n            translateY={scrollTop}\n          />\n          <Canvas\n            ref={this.frontCanvasRef}\n            width={WIDTH}\n            height={HEIGHT}\n            translateX={scrollLeft}\n            translateY={scrollTop}\n          />\n        </ScrollableCanvasContainer>\n      </>\n    );\n  }\n}\n\n`;\n\nexport const scrollableCanvasWithMeasureExampleCode = `import React, { Component, createRef } from 'react';\nimport { ScrollableCanvas } from './react-scrollable-canvas';\nimport Measure from 'react-measure';\nimport styled from 'styled-components';\n\nconst CIRCLE_RADIUS = 5;\nconst CIRCLE_SIZE = 30;\n\nconst Div = styled.div\\`\n  width: 100%;\n  height: 300px;\n\\`;\n\nexport default class ScrollableCanvasWithMeasureExample extends Component {\n  canvasRef = createRef();\n  ctx = null;\n\n  state = {\n    canvas: { width: 0, height: 0 },\n    scroll: { top: 0, left: 0 },\n  };\n\n  draw = () => {\n    const { width, height } = this.state.canvas;\n    const { top, left } = this.state.scroll;\n\n    // draw canvas here.\n    this.ctx.clearRect(0, 0, width, height);\n    for (let y = -top % CIRCLE_SIZE; y < height - (top % CIRCLE_SIZE); y += CIRCLE_SIZE) {\n      for (let x = -left % CIRCLE_SIZE; x < width - (left % CIRCLE_SIZE); x += CIRCLE_SIZE) {\n        this.ctx.beginPath();\n        this.ctx.arc(x + CIRCLE_SIZE / 2, y + CIRCLE_SIZE / 2, CIRCLE_RADIUS, 0, 360, false);\n        this.ctx.fillStyle = \\`rgba(\\${(left + x) / 2}, \\${(top + y) / 2}, 128, 0.8)\\`;\n        this.ctx.fill();\n      }\n    }\n  };\n\n  onScroll = (scrollTop, scrollLeft) => {\n    this.setState({ scroll: { top: scrollTop, left: scrollLeft } });\n  };\n\n  componentDidMount() {\n    this.ctx = this.canvasRef.current.getContext('2d');\n  }\n\n  componentDidUpdate() {\n    this.draw();\n  }\n\n  render() {\n    const { width, height } = this.state.canvas;\n\n    return (\n      <Measure\n        bounds\n        onResize={contentRect => {\n          this.setState({ canvas: { ...contentRect.bounds } });\n        }}\n      >\n        {({ measureRef }) => (\n          <Div ref={measureRef}>\n            <ScrollableCanvas\n              width={width}\n              height={height}\n              largeWidth={width * 2}\n              largeHeight={height * 2}\n              canvasRef={this.canvasRef}\n              onScroll={this.onScroll}\n            />\n          </Div>\n        )}\n      </Measure>\n    );\n  }\n}\n\n`;\n\nexport const scrollableClickableCanvasExampleCode = `import React, { Component, createRef } from 'react';\nimport { ScrollableCanvas } from './react-scrollable-canvas';\nimport styled from 'styled-components';\n\nconst WIDTH = 300;\nconst HEIGHT = 300;\nconst LARGE_WIDTH = 600;\nconst LARGE_HEIGHT = 600;\nconst CIRCLE_RADIUS = 10;\n\nconst Div = styled.div\\`\n  width: \\${WIDTH}px;\n  height: \\${HEIGHT}px;\n  border: inset 1px #000000;\n\\`;\n\nexport default class ScrollableClickableCanvasExample extends Component {\n  canvasRef = createRef();\n  ctx = null;\n  points = [{ x: WIDTH / 2, y: HEIGHT / 2 }];\n  state = {\n    scrollTop: 0,\n    scrollLeft: 0,\n  };\n\n  draw = () => {\n    const { scrollTop, scrollLeft } = this.state;\n\n    // draw canvas here.\n    this.ctx.clearRect(0, 0, WIDTH, HEIGHT);\n    for (let i = 0; i < this.points.length; i++) {\n      this.ctx.beginPath();\n      this.ctx.arc(-scrollLeft + this.points[i].x, -scrollTop + this.points[i].y, CIRCLE_RADIUS, 0, 360, false);\n      this.ctx.fillStyle = \\`rgba(0, 0, 0, 0.8)\\`;\n      this.ctx.fill();\n    }\n  };\n\n  onScroll = (scrollTop, scrollLeft) => {\n    this.setState({ scrollTop, scrollLeft });\n  };\n\n  onClick = event => {\n    const { offsetX, offsetY } = event.nativeEvent;\n    const { scrollTop, scrollLeft } = this.state;\n    this.points.push({ x: offsetX + scrollLeft, y: offsetY + scrollTop });\n    this.draw();\n  };\n\n  componentDidMount() {\n    this.ctx = this.canvasRef.current.getContext('2d');\n    this.draw();\n  }\n\n  componentDidUpdate() {\n    this.draw();\n  }\n\n  render() {\n    return (\n      <Div onClick={this.onClick}>\n        <ScrollableCanvas\n          width={WIDTH}\n          height={HEIGHT}\n          largeWidth={LARGE_WIDTH}\n          largeHeight={LARGE_HEIGHT}\n          canvasRef={this.canvasRef}\n          onScroll={this.onScroll}\n        />\n      </Div>\n    );\n  }\n}\n`;\n\nexport const docsMarkdown = `# react-scrollable-canvas\n\n[![Build Status](https://travis-ci.com/solt9029/react-scrollable-canvas.svg?branch=master)](https://travis-ci.com/solt9029/react-scrollable-canvas)\n\nreact-scrollable-canvas is a React component library that you can create scrollable canvas easily and quickly.\n\n## Installation\n\nInstall \\`\\`\\` react-scrollable-canvas \\`\\`\\` with npm:\n\n\\`\\`\\`\nnpm install react-scrollable-canvas --save\n\\`\\`\\`\n\n## Props\n\n### ScrollableCanvas Props\n\n|Name|Type|Description|\n|---|---|---|\n|width|number|Required. Width of the display size.|\n|height|number|Required. Height of the display size.|\n|largeWidth|number|Required. Width of the canvas size.|\n|largeHeight|number|Required. Height of the canvas size.|\n|wait|number|Function onScroll is called every (wait) milliseconds. Used for throttle function. Default value is 10.|\n|noScrollbar|boolean|Hide scroll bar. Default value is false.|\n|onScroll|(scrollTop: number, scrollLeft: number) => void|This function is called when scrolled.|\n|canvasRef|React.RefObject|This references a canvas element inside ScrollableCanvas.|\n\n### ScrollableCanvasContainer Props\n\n|Name|Type|Description|\n|---|---|---|\n|width|number|Required. Width of the display size.|\n|height|number|Required. Height of the display size.|\n|largeWidth|number|Required. Width of the canvas size.|\n|largeHeight|number|Required. Height of the canvas size.|\n|wait|number|Function onScroll is called every (wait) milliseconds. Used for throttle function. Default value is 10.|\n|noScrollbar|boolean|Hide scroll bar. Default value is false.|\n|onScroll|(scrollTop: number, scrollLeft: number) => void|This function is called when scrolled.|\n|children|React.ReactNode|Children of ScrollableCanvasContainer.|\n\n### Canvas Props\n\n|Name|Type|Description|\n|---|---|---|\n|width|number|Width css property. Default value is 500.|\n|height|number|Height css property. Default value is 500.|\n|translateX|number|translateX css property. Default value is 0.|\n|translateY|number|translateY css property. Default value is 0.|\n|top|number|top css property. Default value is 0.|\n|left|number|left css property. Default value is 0.|\n\n`;\n","import React from 'react';\nimport ReactMarkdown from 'react-markdown';\nimport { Container } from 'reactstrap';\nimport styled from 'styled-components';\nimport { docsMarkdown } from './constants';\nimport Navbar from './Navbar';\n\nconst StyledContainer = styled(Container)`\n  margin-top: 30px;\n  margin-bottom: 30px;\n`;\n\nconst DocsPage = () => (\n  <>\n    <Navbar active=\"docs\" />\n    <StyledContainer>\n      <ReactMarkdown source={docsMarkdown} />\n    </StyledContainer>\n  </>\n);\n\nexport default DocsPage;\n","import React from 'react';\nimport { Route } from 'react-router-dom';\nimport IndexPage from './IndexPage';\nimport ExamplesPage from './ExamplesPage';\nimport DocsPage from './DocsPage';\n\nconst App = () => {\n  return (\n    <>\n      <Route exact path=\"/\" component={IndexPage} />\n      <Route exact path=\"/examples\" component={ExamplesPage} />\n      <Route exact path=\"/docs\" component={DocsPage} />\n    </>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { HashRouter } from 'react-router-dom';\n\nReactDOM.render(\n  <HashRouter>\n    <App />\n  </HashRouter>,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}